function reformatDate(date){console.log(date);var dd=date.getDate(),mm=date.getMonth()+1,yyyy=date.getFullYear();return dd<10&&(dd="0"+dd),mm<10&&(mm="0"+mm),yyyy+"-"+mm+"-"+dd}var app=angular.module("MyApp",["ngRoute"]);app.config(["$routeProvider","$locationProvider",function($routeProvider,$locationProvider){$routeProvider.when("/",{templateUrl:"html/login.html",controller:"loginCtrl"}).when("/login",{templateUrl:"html/login.html",controller:"loginCtrl"}).when("/projects",{templateUrl:"html/projects.html",controller:"projectsCtrl"}).otherwise({redirectTo:"/projects"}),$locationProvider.html5Mode(!0)}]),app.controller("loginCtrl",function($scope,$window,$location,LoginService){$scope.user={username:"",password:""},$scope.login=function(){LoginService.login($scope.user).then(function(res){res&&($window.sessionStorage.setItem("token",res),$location.url("/projects"))},function(err){console.log(err)})}}),app.controller("projectsCtrl",function($scope,$window,$location,ProjectsService){function getProjectByPk(pk){console.log(pk);for(var i=0;i<$scope.projects.length;i++)if($scope.projects[i].pk==pk)return $scope.projects[i]}$scope.title="Projects come here",$scope.projects={},$scope.editPk=-1,$scope.selectedPk=-1,$scope.selected={},$scope.state=0,$scope.newProject={title:"title",description:"description",start_date:new Date,end_date:new Date,is_billable:!1,is_active:!1},$scope.editingProject=!1;var token=$window.sessionStorage.getItem("token");if(null==token)return void $location.url("/login");ProjectsService.getProjects(token).then(function(res){console.log(res),$scope.projects=res}),$scope.deleteToggle=function(){0==$scope.state?$scope.state=2:2==$scope.state&&($scope.state=0)},$scope.deleteProject=function(){console.log("delete called"),ProjectsService.deleteProject($scope.selectedPk,token).then(function(res){console.log(res),1==res&&($scope.projects=$scope.projects.filter(function(obj){return obj.pk!==$scope.selectedPk}),$scope.selectedPk=-1,$scope.state=0)})},$scope.toggleNew=function(){0==$scope.state?$scope.state=3:3==$scope.state&&($scope.state=0)},$scope.createProject=function(){ProjectsService.createProject($scope.newProject).then(function(res){$scope.projects.push(res),$scope.newProject={title:"title",description:"description",start_date:new Date,end_date:new Date,is_billable:!1,is_active:!1},$scope.state=0},function(err){console.log(err)})},$scope.editToggle=function(){if(console.log("call editToggle "),$scope.editPk==$scope.selectedPk)$scope.state=0,$scope.editPk=-1;else{$scope.editPk=$scope.selectedPk;var editingProject=getProjectByPk($scope.editPk);$scope.editingProject={pk:editingProject.pk,title:editingProject.title,description:editingProject.description,start_date:new Date(editingProject.start_date),end_date:new Date(editingProject.end_date),is_billable:editingProject.is_billable,is_active:editingProject.is_active},$scope.state=1}},$scope.saveEdit=function(){ProjectsService.updateProject($scope.editingProject).then(function(res){if(console.log(res),1==res){for(var i=0;i<$scope.projects.length;i++)$scope.projects[i].pk==$scope.editPk&&($scope.projects[i].pk=$scope.editingProject.pk,$scope.projects[i].title=$scope.editingProject.title,$scope.projects[i].description=$scope.editingProject.description,$scope.projects[i].start_date=reformatDate($scope.editingProject.start_date),$scope.projects[i].end_date=reformatDate($scope.editingProject.end_date),$scope.projects[i].is_billable=$scope.editingProject.is_billable,$scope.projects[i].is_active=$scope.editingProject.is_active);$scope.editPk=-1}$scope.state=0},function(err){console.log(err)})},$scope.selectToggle=function(selected){-1==$scope.editPk&&($scope.selectedPk=selected,$scope.selected=getProjectByPk(selected),console.log($scope.selected))}}),app.factory("LoginService",function($http,$q){return loginFunctions={},loginFunctions.login=function(user){return $q(function(resolve,reject){$http.post("/api/login?username="+user.username+"&password="+user.password).then(function(res){console.log(res),resolve(res.data)},function(err){reject(err)})})},loginFunctions}),app.factory("ProjectsService",function($http,$q,$window){return projectsFunctions={},projectsFunctions.getProjects=function(token){return $q(function(resolve,reject){$http.get("api/projects/get?token="+token).then(function(res){console.log(res),resolve(res.data)},function(err){reject(err)})})},projectsFunctions.deleteProject=function(current,token){return $q(function(resolve,reject){$http.post("api/projects/delete?pk="+current+"&token="+$window.sessionStorage.getItem("token")).then(function(res){resolve(res.data)},function(err){reject(err)})})},projectsFunctions.updateProject=function(project,token){return $q(function(resolve,reject){var tempProject={pk:project.pk,title:project.title,description:project.description,start_date:reformatDate(project.start_date),end_date:reformatDate(project.end_date),is_billable:project.is_billable,is_active:project.is_active};console.log(tempProject),$http.post("api/projects/update?token="+$window.sessionStorage.getItem("token"),tempProject).then(function(res){console.log(res),resolve(res.data)},function(err){reject(err)})})},projectsFunctions.createProject=function(project,token){return $q(function(resolve,reject){var tempProject={title:project.title,description:project.description,start_date:reformatDate(project.start_date),end_date:reformatDate(project.end_date),is_billable:project.is_billable,is_active:project.is_active};console.log(tempProject),$http.post("api/projects/create?token="+$window.sessionStorage.getItem("token"),tempProject).then(function(res){console.log(res),resolve(res.data)},function(err){reject(err)})})},projectsFunctions});